int switch_mode_pin;//crate integer varieble for  switch_mode_pin
int blue_led_pin;//crate integer varieble for blue_led_pin
int buzzer_pin;//crate integer varieble for buzzer pin
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 16, 2); //(F3)
#define trigPin 9
#define echoPin 10
//#define led_pin_red 4
int led_pin_red;


void setup(){
  pinMode(led_pin_red, OUTPUT);  
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600);
  blue_led_pin = 8;
  led_pin_red = 4;
  pinMode(blue_led_pin, OUTPUT);
  switch_mode_pin = 7;
  buzzer_pin=4;//set buzzer pin to pin 4
  pinMode(switch_mode_pin, 2);
  pinMode(buzzer_pin, 1);//set buzzer pin to output
  lcd.init();
	lcd.backlight();

}
void auto_mode(){
   if(ultra()>50){;
   // it is auto mode
    Serial.println("auto_mode");
    tone(buzzer_pin, 400);//start buzzer pin4 400hz                   
  }else{;//it is manual mode
    Serial.println("manual_mode");
     noTone(buzzer_pin);//finish buzzer   
  }

}
void nigger(){ 
  lcd.clear();  
  //lcd.setCursor(0, 0);         
  //lcd.print("nigger");        
  lcd.setCursor(2, 1);         
  lcd.print(ultra()); 
  
}
void ShowInfoLcd(int are, int you, int ready){ 
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("are|you|ready");
  lcd.setCursor(1,1);
  lcd.print(are);  
  lcd.setCursor(2,1);
  lcd.print(" | "); 
  lcd.setCursor(5,1);
  lcd.print(you); 
  lcd.setCursor(6,1);
  lcd.print(" | ");  
  lcd.setCursor(10,1);
  lcd.print(ready);
 

}

void BLUE(){
  if(digitalRead(switch_mode_pin)){;//check switch mode posision
   // it is auto mode
   digitalWrite(blue_led_pin,LOW);
  }else{;//it is manual mode
     digitalWrite(blue_led_pin,HIGH);
  }

}



int ultra(){
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  long duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  int distance = duration * 0.034 / 2;
  // Prints the distance on the Serial Monitor
  /*Serial.print("Distance: ");
  Serial.println(distance);


*/
  return distance;
}
void claer(){
  lcd.clear();
       noTone(buzzer_pin);//finish buzzer   
  

}

void loop(){
  //BLUE();
  //ShowInfoLcd(1,2,3);
  //if(digitalRead(switch_mode_pin)){;//check switch mode posision

  nigger();
  delay(800);
  Serial.println(ultra());
   if(ultra()>50){;
    digitalWrite(led_pin_red, LOW);
    digitalWrite(blue_led_pin, HIGH);
    noTone(buzzer_pin);//finish buzzer   


  }else{;
    digitalWrite(led_pin_red, HIGH);
    digitalWrite(blue_led_pin, LOW);
    tone(buzzer_pin, 400);//start buzzer pin4 400hz                   





  }

}
