int blue_led_pin;//crate integer varieble for blue_led_pin
int buzzer_pin;//crate integer varieble for buzzer pin
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 16, 2); //(F3)
#define trigPin 9
#define echoPin 10
//#define led_pin_red 4
int led_pin_red;


void setup(){
  pinMode(led_pin_red, OUTPUT);  
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600);
  blue_led_pin = 8;
  led_pin_red = 4;
  pinMode(blue_led_pin, OUTPUT);
  buzzer_pin=1;//set buzzer pin to pin 4
  pinMode(buzzer_pin, 1);//set buzzer pin to output
  lcd.init();
	lcd.backlight();

}

void LCD(){ 
  lcd.clear();
  lcd.setCursor(3,1);
  lcd.print(" | ");
  lcd.setCursor(3,0);
  lcd.print(" | "); 
  lcd.setCursor(10,1);
  lcd.print(" | ");
  lcd.setCursor(10,0);
  lcd.print(" | ");
  lcd.setCursor(6,0);
  lcd.print("dist");            
  lcd.setCursor(7, 1);         
  lcd.print(ultra());
  
  
}


int ultra(){
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  long duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  int distance = duration * 0.034 / 2;
  // Prints the distance on the Serial Monitor
  /*Serial.print("Distance: ");
  Serial.println(distance);


*/
  return distance;
}


void loop(){


  LCD();
  delay(1000);
  Serial.println(ultra());
   if(ultra()>50){;
    digitalWrite(led_pin_red, LOW);
    digitalWrite(blue_led_pin, HIGH);
    noTone(buzzer_pin);//finish buzzer   


  }else{;
    digitalWrite(led_pin_red, HIGH);
    digitalWrite(blue_led_pin, LOW);
    tone(buzzer_pin, 400);//start buzzer pin4 400hz                   

  }

}

